trigger:
  branches:
    include:
      - master  # or your active branch

pool:
  name: 'agent1'

variables:
  dockerHubUser: 'pavani687'
  imageName: 'amazon'
  tag: 'latest'

stages:
# Stage 1: Build the WAR and Docker image
- stage: BuildAndPush
  jobs:
  - job: Build
    steps:
    - checkout: self

    - task: Maven@3
      displayName: 'Build with Maven'
      inputs:
        mavenPomFile: 'Amazon/pom.xml'
        goals: 'clean package'
        options: '-DskipTests'

    - task: Docker@2
      displayName: 'Build and Push Docker Image'
      inputs:
        containerRegistry: 'docker-hub-connection'  # Azure DevOps service connection
        repository: '$(dockerHubUser)/$(imageName)'
        command: 'buildAndPush'
        Dockerfile: 'Dockerfile'
        tags: |
          $(tag)

# Stage 2: Deploy using Docker Compose on remote VM
- stage: Deploy
  dependsOn: BuildAndPush
  jobs:
  - deployment: DeployToVM
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: CopyFilesOverSSH@0
            displayName: 'Copy docker-compose to VM'
            inputs:
              sshEndpoint: 'docker-host-ssh'  # SSH service connection
              sourceFolder: '$(Build.SourcesDirectory)'
              contents: |
                docker-compose.yml
              targetFolder: '/home/azureuser/deploy'

          - task: SSH@0
            displayName: 'Deploy via Docker Compose'
            inputs:
              sshEndpoint: 'docker-host-ssh'
              runOptions: 'commands'
              commands: |
                cd /home/azureuser/deploy
                docker-compose pull
                docker-compose up -d
